//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BugsTrackersScreenCapture.BugTrackerWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BugTrackerWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BugTrackerWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectByMemberUsernameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BugTrackerWebService() {
            this.Url = global::BugsTrackersScreenCapture.Properties.Settings.Default.ScreenCapture_BugTrackerWebService_BugTrackerWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveIssueCompletedEventHandler SaveIssueCompleted;
        
        /// <remarks/>
        public event GetProjectByMemberUsernameCompletedEventHandler GetProjectByMemberUsernameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveIssue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveIssue(int issueId, int projectId, string title, string user, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] img) {
            object[] results = this.Invoke("SaveIssue", new object[] {
                        issueId,
                        projectId,
                        title,
                        user,
                        img});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveIssueAsync(int issueId, int projectId, string title, string user, byte[] img) {
            this.SaveIssueAsync(issueId, projectId, title, user, img, null);
        }
        
        /// <remarks/>
        public void SaveIssueAsync(int issueId, int projectId, string title, string user, byte[] img, object userState) {
            if ((this.SaveIssueOperationCompleted == null)) {
                this.SaveIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveIssueOperationCompleted);
            }
            this.InvokeAsync("SaveIssue", new object[] {
                        issueId,
                        projectId,
                        title,
                        user,
                        img}, this.SaveIssueOperationCompleted, userState);
        }
        
        private void OnSaveIssueOperationCompleted(object arg) {
            if ((this.SaveIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveIssueCompleted(this, new SaveIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectByMemberUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectInfoBase[] GetProjectByMemberUsername(string userName) {
            object[] results = this.Invoke("GetProjectByMemberUsername", new object[] {
                        userName});
            return ((ProjectInfoBase[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectByMemberUsernameAsync(string userName) {
            this.GetProjectByMemberUsernameAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetProjectByMemberUsernameAsync(string userName, object userState) {
            if ((this.GetProjectByMemberUsernameOperationCompleted == null)) {
                this.GetProjectByMemberUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectByMemberUsernameOperationCompleted);
            }
            this.InvokeAsync("GetProjectByMemberUsername", new object[] {
                        userName}, this.GetProjectByMemberUsernameOperationCompleted, userState);
        }
        
        private void OnGetProjectByMemberUsernameOperationCompleted(object arg) {
            if ((this.GetProjectByMemberUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectByMemberUsernameCompleted(this, new GetProjectByMemberUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class ProjectInfoBase {
        
        private string nameField;
        
        private string keyField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectInfo : ProjectInfoBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveIssueCompletedEventHandler(object sender, SaveIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetProjectByMemberUsernameCompletedEventHandler(object sender, GetProjectByMemberUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectByMemberUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectByMemberUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectInfoBase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectInfoBase[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591